name: CD
run-name: "CD run by @${{ github.actor }}, event: ${{ github.event_name }}"
on:
    workflow_call:
    workflow_dispatch:
concurrency:
    group: cd ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true
jobs:
    deploy:
        runs-on: ubuntu-latest
        environment: production
        steps:
            - uses: actions/checkout@v4
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-west-2
            - name: Deploy to AWS
              run: |
                  cd terraform/environments/dev
                  terraform init
                  terraform destroy \
                    -var="container_image=${{ secrets.ECR_REGISTRY }}:${{ github.sha }}" \
                    -auto-approve && \
                  terraform apply \
                    -var="container_image=${{ secrets.ECR_REGISTRY }}:${{ github.sha }}" \
                    -auto-approve
            - name: Get ALB DNS Name
              id: alb_dns
              run: |
                  echo "::set-output name=alb_dns::$(terraform output -raw alb_dns_name)"
              working-directory: terraform/environments/dev
            - name: Set up Ruby
              uses: ruby/setup-ruby@v1
              with:
                  ruby-version: '3.3.5'
                  bundler-cache: true
            - name: Install dependencies
              env:
                GITHUB_USERNAME: ${{ vars.ENV_GITHUB_USERNAME }}
                GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.ENV_GITHUB_PERSONAL_ACCESS_TOKEN }}
              run: |
                gem install bundler
                bundle install --with test
              working-directory: src
            - name: Install Google Chrome browser
              run: |
                chmod +x ./scripts/InstallChrome.sh
                ./scripts/InstallChrome.sh 
            - name: Test User Flows against deployment
              env:
                  APP_HOST: http://${{ steps.alb_dns.outputs.alb_dns }}
                  APP_HOST_PORT: 3000
              run: |
                  echo "Running User flows pointing at ${APP_HOST}:${APP_HOST_PORT}"
                  cucumber features
              working-directory: src/test/user_flows